# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, IONDV LLC
# This file is distributed under the same license as the IONDV docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IONDV docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-02-24 04:41+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../index.rst:9
msgid "Содержание:"
msgstr ""

#: ../../index.rst:7
msgid "Документация по платформе IONDV.Framework"
msgstr ""

#: ../../index.rst:76
msgid "This page in `English <https://iondv.readthedocs.io/en/latest>`_"
msgstr ""

#: ../../index.rst:88
msgid "IONDV. Framework - это опенсорный фреймворк на node.js для разработки учетных приложений или микросервисов на основе метаданных и отдельных модулей. Он является частью инструментальной цифровой платформы для создания enterprise (ERP) приложений состоящей из опенсорсных компонентов: самого `фреймворка <https://github.com/iondv/framework>`_\\ , `модулей <https://github.com/topics/iondv-module>`_ и готовых приложений расширяющих его функциональность, визуальной среды `Studio <https://github.com/iondv/studio>`_ для разработки метаданных приложений."
msgstr ""

#: ../../index.rst:97
msgid "Описание"
msgstr ""

#: ../../index.rst:99
msgid "**IONDV. Framework** — это инструмент для создания веб-приложений, на основе метаданных без программирования. Можно изменять и дополнять систему с помощью наращивания дополнительной функциональности в виде модулей. Есть готовые модули, но ничто не ограничевает вас создать свои собственные и персонализировать приложение."
msgstr ""

#: ../../index.rst:101
msgid "Основное предназначение - реализация сложносоставных систем реестра данных. Основу функциональности составляет реестр данных — модуль Регистри. Это ключевой модуль, предназначенный непосредственно для работы с данными на основе структур метаданных – в том числе по ведению проектов, программ, мероприятий и др."
msgstr ""

#: ../../index.rst:103
msgid "**IONDV. Framework** это фреймворк с открытым исходным кодом на JavaScript и открытой структурой метаданных в формате JSON."
msgstr ""

#: ../../index.rst:106
msgid "Как спроектировать приложение?"
msgstr ""

#: ../../index.rst:108
msgid "**Что?** Бизнес-приложение любого класса."
msgstr ""

#: ../../index.rst:111
msgid "**Как?** Описать данные и примененить готовые модули с возможностью корректировки под конкретные задачи."
msgstr ""

#: ../../index.rst:114
msgid "``core + metadata + modules = application``"
msgstr ""

#: ../../index.rst:123
msgid "В квадратных рамках - *ioncore*\\ , *meta class*\\ , *meta view*\\ , *meta navigation* и *registry module* - это база простейшего приложения. Чуть ниже представлены дополнительные типы меты и модули. Они представляют собой дополнительную функциональность и применяются в соответствии с приложением. Зависимости приложения смотрим в файле ``package.json``."
msgstr ""

#: ../../index.rst:126
msgid "Типичные приложения"
msgstr ""

#: ../../index.rst:128
msgid "Каркас для создания приложений, как уровня предприятия, так и узкофункциональных - от портала до аналитики:"
msgstr ""

#: ../../index.rst:131
msgid "Управление документами;"
msgstr ""

#: ../../index.rst:132
msgid "Бухгалтерский учет и отчетность;"
msgstr ""

#: ../../index.rst:133
msgid "Управление ресурсами предприятия;"
msgstr ""

#: ../../index.rst:134
msgid "Управление рабочим процессом и проектной деятельностью;"
msgstr ""

#: ../../index.rst:135
msgid "Сбор данных;"
msgstr ""

#: ../../index.rst:136
msgid "Бизнес-аналитика;"
msgstr ""

#: ../../index.rst:137
msgid "Системная интеграция."
msgstr ""

#: ../../index.rst:140
msgid "Бесплатные демоверсии"
msgstr ""

#: ../../index.rst:142
msgid "Посмотрите наши демо уже сейчас:"
msgstr ""

#: ../../index.rst:145
msgid "`Studio <https://studio.iondv.com/index>`_ - специализированная IDE, помогающая ускорить и упростить разработку приложений на IONDV. Framework. `GitHub Репозиторий <https://github.com/iondv/studio>`_. `Инструкция по созданию приложения при помощи ION. Studio <https://github.com/iondv/nutrition-tickets/blob/master/tutorial/ru/index.md>`_"
msgstr ""

#: ../../index.rst:146
msgid "`DNT <https://dnt.iondv.com/auth>`_ - наше приложение для разработки и тестирования, на основе которого внедряются и тестируются новые метакомпоненты. Практически все элементы системы находятся в приложении DNT.\\ `GitHub Репозиторий <github.com/iondv/develop-and-test>`_."
msgstr ""

#: ../../index.rst:147
msgid "`War Archive <https://war-archive.iondv.com/portal/index>`_ - это программное решение на основе IONDV. Framework, реализованное для действующего проекта \"Вспомнить каждого\", цель которого оцифровать архивные документы, внести информацию в базу и обеспечить к ним свободный доступ. `GitHub Репозиторий <https://github.com/iondv/war-archive>`_."
msgstr ""

#: ../../index.rst:148
msgid "`Project Management <https://pm-gov-ru.iondv.com>`_ - это программное решение на основе IONDV. Framework, реализованное для организации проектной деятельности, целью которой является контроль результатов, соблюдение и сокращение сроков их достижения, эффективное использование временных, человеческих и финансовых ресурсов, принятие своевременных и обоснованных управленческих решений. `GitHub Repo <https://github.com/iondv/pm-gov-ru>`_"
msgstr ""

#: ../../index.rst:149
msgid "`Telecom <https://telecom-ru.iondv.com>`_ - это программное решение на основе IONDV. Framework, реализованное для организации учета, хранения и отображения данных о наличии услуг связи (интернет, сотовая связь, телевидение, почта и др.) в населенных пукнтах региона. `GitHub Repo <https://github.com/iondv/telecom-ru>`_"
msgstr ""

#: ../../index.rst:151
msgid "CRM - *скоро на GitHub*."
msgstr ""

#: ../../index.rst:153
msgid "Логин для доступа - demo, пароль - ion-demo. Регистрация не требуется."
msgstr ""

#: ../../index.rst:156
msgid "Функциональные возможности"
msgstr ""

#: ../../index.rst:158
msgid "**IONDV. Framework** обеспечивает реализацию следующей функциональности:"
msgstr ""

#: ../../index.rst:161
msgid "обеспечение трансляции описательных метаданных в структуру хранения данных в СУБД;"
msgstr ""

#: ../../index.rst:162
msgid "обеспечение функциональности работы с различными СУБД (ORM технологию);"
msgstr ""

#: ../../index.rst:163
msgid "обеспечение авторизации в системе с различными политиками, по умолчанию oath2, с открытым конфигурируемым API для подключения авторизационных модулей библиотеки passport обеспечивает до 500 различных политик авторизации;"
msgstr ""

#: ../../index.rst:164
msgid "обеспечение безопасности доступа к данным – статической к типам данных, к навигации, к этапам бизнес-процессов, к действиям на форме; динамической – через условия в данных, которым должен соответствовать профиль текущего пользователя (принадлежность к подразделению или организации указанной в объекте, группе или другим условиям); через url; обеспечение исключения в авторизации и безопасности по url или для специального пользователя;"
msgstr ""

#: ../../index.rst:165
msgid "подключение модулей, обеспечивающих дополнительную функциональность и реализуемую через доступ к интерфейсам (API) ядра;"
msgstr ""

#: ../../index.rst:166
msgid "обеспечение импорта, экспорта данных в системе, метаданных, безопасности из файлов;"
msgstr ""

#: ../../index.rst:167
msgid "обеспечение взаимодействия с файловой системой для хранения данных, в том числе с внешними файловыми хранилищами, такими как nextcloud;"
msgstr ""

#: ../../index.rst:168
msgid "расчет значения с формулами и кэширование этих данных;"
msgstr ""

#: ../../index.rst:169
msgid "обеспечение жадной загрузки данных и их фильтрации в связанных коллекциях;"
msgstr ""

#: ../../index.rst:170
msgid "кэширование запросов и сессий в memcached, redis;"
msgstr ""

#: ../../index.rst:171
msgid "выполнение задач по расписанию;"
msgstr ""

#: ../../index.rst:172
msgid "уведомление пользователей по событиям."
msgstr ""

#: ../../index.rst:174
msgid "Подробнее о функциональных возможностях фреймворка и его модулей можно узнать `здесь <https://iondv.readthedocs.io/ru/latest/key_features.html>`_."
msgstr ""

#: ../../index.rst:177
msgid "Быстрый старт"
msgstr ""

#: ../../index.rst:179
msgid "Вы можете посмотреть собранные приложения, развернутые в облаке или получить продукты для изучения другим способом на `сайте фреймворка <https://iondv.com>`_\\ , в том числе:"
msgstr ""

#: ../../index.rst:182
msgid "инсталятор для операционной системы Linux"
msgstr ""

#: ../../index.rst:183
msgid "клонирование репозитория и установка всех компонентов"
msgstr ""

#: ../../index.rst:184
msgid "docker-контейнер с собранным приложением"
msgstr ""

#: ../../index.rst:185
msgid "архив с собранным приложением"
msgstr ""

#: ../../index.rst:188
msgid "Cистемное окружение"
msgstr ""

#: ../../index.rst:190
msgid "Запуск фреймворка осуществляется в среде `Node.js <https://nodejs.org/en/>`_ версии 10.x.x."
msgstr ""

#: ../../index.rst:192
msgid "Для хранения данных необходимо установить и запустить `MongoDb <https://www.mongodb.org/>`_ версии 3.6."
msgstr ""

#: ../../index.rst:195
msgid "Установщик"
msgstr ""

#: ../../index.rst:197
msgid "Вы можете использовать установщик приложений IONDV. Framework `iondv-app <https://github.com/iondv/iondv-app>`_\\ , требующий установленных node, mongodb и git. В ходе установки будет проверены и установлены все остальные зависимости, а также собрано и запущено само приложение."
msgstr ""

#: ../../index.rst:200
msgid "Установка в одну строку:"
msgstr ""

#: ../../index.rst:206
msgid "Где параметры для iondv-app ``localhost:27017`` адрес MongoDB, а ``develop-and-test`` название приложения. После запуска открыть ссылку 'http://localhost:8888', учетная запись бек офиса **demo**\\ , пароль **ion-demo**."
msgstr ""

#: ../../index.rst:208
msgid "Также другой способ заключается в клонировании - (\\ ``git clone https://github.com/iondv/iondv-app.git``\\ ) и установите приложение с помощью команды ``bash iondv-app -m localhost:27017 develop-and-test``."
msgstr ""

#: ../../index.rst:210
msgid "Можно также собрать приложение в докер конейтнерах, тогда из окружения нужен только docker и СУБД mongodb в докер контейнере. Подробнее на странице сборщика приложения  IONDV. Framework `iondv-app <https://github.com/iondv/iondv-app>`_"
msgstr ""

#: ../../index.rst:213
msgid "Сборка приложения из репозитория"
msgstr ""

#: ../../index.rst:215
msgid "Глобальные зависимости"
msgstr ""

#: ../../index.rst:217
msgid "Для сборки компонентов и библиотек фреймворка необходимо установить глобально:"
msgstr ""

#: ../../index.rst:219
msgid "пакет `node-gyp <https://github.com/nodejs/node-gyp>`_ ``npm install -g node-gyp``. Для работы библиотеки под операционной системой семейства windows дополнительно необходимо установить пакет windows-build-tools ``npm install -g --production windows-build-tools``."
msgstr ""

#: ../../index.rst:220
msgid "пакет сборщика проектов `Gulp <http://gulpjs.com/>`_ ``npm install -g gulp@4.0``. ``4.0`` - поддерживаемая версия ``Gulp``."
msgstr ""

#: ../../index.rst:221
msgid "менджер пакетов фронтенд библиотек `Bower <https://bower.io>`_ ``npm install -g bower``."
msgstr ""

#: ../../index.rst:224
msgid "Установка ядра, модулей и приложения"
msgstr ""

#: ../../index.rst:226
msgid "Рассматриваем на примере приложения ``develop-and-test``. На месте приложения ``develop-and-test`` в пути может быть указано ``namespace``. Это значит, что необходимо самостоятельно проставить название приложения в путь, вместо ``namespace``. Находим приложение ``develop-and-test`` в репозитории. Смотрим зависимости указаные в файле ``package.json``."
msgstr ""

#: ../../index.rst:250
msgid "Начинаем установку с ядра, версия которого указана в парметре ``\"engines\": {\"ion\": \"1.24.1\"}``. Скопируйте адрес репозитория ядра и в командной строке выполните комманду ``git clone https://github.com/iondv/framework``. Перейдите в папку ядра, переключитесь на tag номера версии ``git checkout tags/v1.24.1``."
msgstr ""

#: ../../index.rst:251
msgid "После этого устанавливаются необходимые для приложения модули, указанные в параметре ``\"ionModulesDependencies\"``. Модули устанавливаются в папку ``modules`` ядра, для этого пейдите в неё командой ``cd modules``. Клонируем модули из списка ``\"ionModulesDependencies\"``, для модуля registry это осуществляется коммандой ``git clone https://github.com/iondv/registry``. Перейдите в папку установленного модуля, переключитесь на tag номера версии ``git checkout tags/v1.27.1``. Повторите для каждого модуля."
msgstr ""

#: ../../index.rst:252
msgid "Установка самого приложения осуществляется в папку ``applications``, для этого перейдите в неё командой  ``cd ..\\applications``, если вы находитесь в папке модулей. Установку выполните клонированием репозитория коммандой ``git clone https://github.com/iondv/dnt_ru``. Перейдите в папку установленного приложения, переключитесь на tag номера версии ``git checkout tags/v1.17.0``"
msgstr ""

#: ../../index.rst:253
msgid "После этого установите дополнительно необходимые приложения из параметра ``\"ionMetaDependencies\"``. Установка осуществляется в папку ``applications``, для установки необходимо убедиться, что находитесь в папке приложений. Клонируем приложения из списка в параметре  ``\"ionMetaDependencies\"``, для приложения ``viewlib`` осуществляется командой ``https://github.com/iondv/viewlib``.  Перейдите в папку установленного приложения, переключитесь на tag номера версии ``git checkout tags/v0.9.1``. Повторите для каждого приложения."
msgstr ""

#: ../../index.rst:256
msgid "Сборка, конфигурирование и развертывание приложения"
msgstr ""

#: ../../index.rst:258
msgid "Сборка приложения обеспечивает установку всех зависимых библиотек, импорт данных в базу данных и подготовку приложения для запуска."
msgstr ""

#: ../../index.rst:260
msgid "Создайте конфигурационный файл ``setup.ini``  в папке ``config`` ядра для задания основных параметров окружения приложения."
msgstr ""

#: ../../index.rst:272
msgid "Открываем файл в редакторе и вставляем содержимое. Самый главный параметр ``db.uri=mongodb://127.0.0.1:27017/ion-dnt`` он указывает на название базы которую мы будем использовать для приложения. База данных будет создана автоматически."
msgstr ""

#: ../../index.rst:274
msgid "Задайте переменную окружения NODE_PATH равной пути к ядру приложения следующей командой ``set NODE_PATH=c:\\workspace\\dnt`` для Windows и ``export NODE_PATH=/workspace/dnt`` для Linux, где ``workspace\\dnt`` - папка файлов ядра приложения."
msgstr ""

#: ../../index.rst:276
msgid "При первом запуске необходимо выполнить ``npm install`` - она поставит ключевые зависимости, в том числе локально сборщик ``gulp``. Убедитесь, что версия ``Gulp`` - ``4.0``."
msgstr ""

#: ../../index.rst:278
msgid "Далее выполните команду сборки приложения ``gulp assemble``."
msgstr ""

#: ../../index.rst:280
msgid "Если вы хотите выполнить импорт данных в вашем проекте, проверьте папку ``data`` в приложении и выполните команду: ``node bin/import-data --src ./applications/develop-and-test --ns develop-and-test``"
msgstr ""

#: ../../index.rst:283
msgid "Добавьте пользователя admin с паролем 123 командой ``node bin\\adduser.js --name admin --pwd 123``."
msgstr ""

#: ../../index.rst:285
msgid "Добавьте пользователю права администратора командой ``node bin/acl.js --u admin@local --role admin --p full``."
msgstr ""

#: ../../index.rst:288
msgid "Запуск"
msgstr ""

#: ../../index.rst:290
msgid "Запустите приложение командой в папке ядра ``npm start``."
msgstr ""

#: ../../index.rst:292
msgid "Откройте браузер с адресом ``http://localhost:8888`` и авторизуйтесь в приложении, где ``8888`` - порт указанный в параметре server.ports конфигурации запуска."
msgstr ""

#: ../../index.rst:295
msgid "Docker"
msgstr ""

#: ../../index.rst:297
msgid "Запуск приложения с использованием докер контейнера:"
msgstr ""

#: ../../index.rst:300
msgid "Запустите СУБД mongodb: ``docker run --name mongodb -v mongodb_data:/data/db -p 27017:27017 -d mongo``"
msgstr ""

#: ../../index.rst:301
msgid "Запустите IONDV. develop-and-test  ``docker run -d -p 80:8888 --link mongodb iondv/develop-and-test``."
msgstr ""

#: ../../index.rst:302
msgid "Откройте ссылку ``http://localhost`` в браузере через минуту (время требуется для инициализации данных). Для бек офиса логин: **demo**\\ , пароль: **ion-demo**"
msgstr ""

#: ../../index.rst:305
msgid "Документация"
msgstr ""

#: ../../index.rst:307
msgid "Документация по платформе IONDV.Framework доступна на двух языках  - `русский <https://iondv.readthedocs.io/ru/latest/index.html>`_ и `english <https://iondv.readthedocs.io/en/latest/index.html>`_."
msgstr ""

#: ../../index.rst:310
msgid "Ссылки"
msgstr ""

#: ../../index.rst:312
msgid "Ниже представлены ссылки на дополнительную информацию по разработке приложений с использованием IONDV.Framework."
msgstr ""

#: ../../index.rst:315
msgid "`Документация <https://iondv.readthedocs.io/ru/latest/index.html>`_"
msgstr ""

#: ../../index.rst:316
msgid "`Домашняя страница фреймворка <https://iondv.com/>`_"
msgstr ""

#: ../../index.rst:317
msgid "Обратная связь на `Facebook <https://www.facebook.com/iondv/>`_"
msgstr ""

#: ../../index.rst:322
msgid "`License <https://github.com/iondv/framework/blob/master/LICENSE>`_                              `Contact us <https://iondv.com/portal/contacts>`_                              `English <https://iondv.readthedocs.io/en/latest/index.html>`_"
msgstr ""

#: ../../index.rst:332
msgid "Copyright (c) 2018 **LLC \"ION DV\"**.\\ :raw-html-m2r:`<br>` All rights reserved."
msgstr ""
